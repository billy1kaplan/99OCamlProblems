### Starting build.
# Target: p1.ml.depends, tags: { package(core), ppx(ppx-jane -as-ppx), bin_annot, debug, extension:ml, file:p1.ml, ocaml, ocamldep, quiet, short_paths, thread }
ocamlfind ocamldep -package core -ppx 'ppx-jane -as-ppx' -modules p1.ml > p1.ml.depends
# Target: p1.cmo, tags: { package(core), ppx(ppx-jane -as-ppx), bin_annot, byte, compile, debug, extension:cmo, extension:ml, file:p1.cmo, file:p1.ml, implem, ocaml, quiet, short_paths, thread }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -package core -ppx 'ppx-jane -as-ppx' -o p1.cmo p1.ml
+ ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -package core -ppx 'ppx-jane -as-ppx' -o p1.cmo p1.ml
File "p1.ml", line 7, characters 4-6:
Warning 27: unused variable hd.
# Target: p1.cmx, tags: { package(core), ppx(ppx-jane -as-ppx), bin_annot, compile, debug, extension:cmx, extension:ml, file:p1.cmx, file:p1.ml, implem, native, ocaml, quiet, short_paths, thread }
ocamlfind ocamlopt -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -package core -ppx 'ppx-jane -as-ppx' -o p1.cmx p1.ml
+ ocamlfind ocamlopt -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -package core -ppx 'ppx-jane -as-ppx' -o p1.cmx p1.ml
File "p1.ml", line 7, characters 4-6:
Warning 27: unused variable hd.
# Target: p1.native, tags: { package(core), ppx(ppx-jane -as-ppx), bin_annot, debug, dont_link_with, extension:native, file:p1.native, link, native, ocaml, program, quiet, short_paths, thread }
ocamlfind ocamlopt -linkpkg -g -thread -package core p1.cmx -o p1.native
# Compilation successful.
